/* DO NOT EDIT THIS FILE - it is machine generated */
#include "jni.h"
/* Header for class Runtime */

#ifndef _Included_Runtime
#define _Included_Runtime
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Runtime
 * Method:    addShutdownHook
 * Signature: (Ljava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_addShutdownHook
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Runtime
 * Method:    availableProcessors
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_java_lang_Runtime_availableProcessors
  (JNIEnv *, jobject);

/*
 * Class:     Runtime
 * Method:    exit
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_exit
  (JNIEnv *, jobject, jint);

/*
 * Class:     Runtime
 * Method:    freeMemomry
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_java_lang_Runtime_freeMemomry
  (JNIEnv *, jobject);

/*
 * Class:     Runtime
 * Method:    gc
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_gc
  (JNIEnv *, jobject);

/*
 * Class:     Runtime
 * Method:    getLocalizedInputStream
 * Signature: (Ljava/io/InputStream;)Ljava/io/InputStream;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Runtime_getLocalizedInputStream
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Runtime
 * Method:    getLocalizedOutputStream
 * Signature: (Ljava/io/OutputStream;)Ljava/io/OutputStream;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Runtime_getLocalizedOutputStream
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Runtime
 * Method:    getRuntime
 * Signature: ()Ljava/lang/Runtime;
 */
JNIEXPORT jobject JNICALL Java_java_lang_Runtime_getRuntime
  (JNIEnv *, jclass);

/*
 * Class:     Runtime
 * Method:    halt
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_halt
  (JNIEnv *, jobject, jint);

/*
 * Class:     Runtime
 * Method:    load
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_load
  (JNIEnv *, jobject, jstring);

/*
 * Class:     Runtime
 * Method:    loadLibrary
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_loadLibrary
  (JNIEnv *, jobject, jstring);

/*
 * Class:     Runtime
 * Method:    maxMemory
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_java_lang_Runtime_maxMemory
  (JNIEnv *, jobject);

/*
 * Class:     Runtime
 * Method:    removeShutdownHook
 * Signature: (Ljava/lang/Thread;)Z
 */
JNIEXPORT jboolean JNICALL Java_java_lang_Runtime_removeShutdownHook
  (JNIEnv *, jobject, jobject);

/*
 * Class:     Runtime
 * Method:    runFinalization
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_runFinalization
  (JNIEnv *, jobject);

/*
 * Class:     Runtime
 * Method:    runFinalizersOnExit
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_runFinalizersOnExit
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     Runtime
 * Method:    totalMemory
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_java_lang_Runtime_totalMemory
  (JNIEnv *, jobject);

/*
 * Class:     Runtime
 * Method:    traceInstructions
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_traceInstructions
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     Runtime
 * Method:    traceMethodCalls
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_java_lang_Runtime_traceMethodCalls
  (JNIEnv *, jobject, jboolean);

#ifdef __cplusplus
}
#endif
#endif
